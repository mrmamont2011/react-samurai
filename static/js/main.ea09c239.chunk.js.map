{"version":3,"sources":["components/Navbar/Navbar.module.css","redux/dialogs-reducer.js","assets/images/preloader.svg","api/api.js","components/common/FormsControls/FormsControls.module.css","serviceWorker.js","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","components/Navbar/Navbar.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspensia.js","App.js","index.js","utils/validator/validator.js","components/common/FormsControls/FormControls.js","components/Header/Header.module.css","components/common/Preloader/Preloader.js","redux/profile-reducer.js","redux/users-reducer.js"],"names":["module","exports","nav","item","activeLink","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","updateNewMessageBodyCreator","body","dialogsReducer","state","arguments","length","undefined","action","Object","D_1react_react_way_of_samurai_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","concat","D_1react_react_way_of_samurai_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","p","d","__webpack_exports__","usersAPI","profileAPI","authAPI","axios__WEBPACK_IMPORTED_MODULE_0__","instance","axios","withCredentials","baseURL","headers","API-KEY","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","getStatus","updateStatus","status","put","me","login","email","password","rememberMe","logout","formControl","error","formSummaryError","Boolean","window","location","hostname","match","Header","props","react_default","a","createElement","className","s","header","src","loginBlock","isAuth","onClick","NavLink","to","setAuthUserData","payload","getAuthUserData","dispatch","resultCode","_response$data$data","authReducer","objectSpread","HeaderContainer","components_Header_Header","this","React","Component","connect","auth","maxLength100","maxLengthCreator","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Input","validate","required","style","stopSubmit","_error","Redirect","formData","Navbar","activeClassName","active","initialized","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","usersPage","usersReducer","formReducer","app","appReducer","store","createStore","applyMiddleware","thunkMiddleware","withSuspensia","Suspense","fallback","DialogsContainer","lazy","e","bind","ProfileContainer","UsersContainer","App","initializeApp","Header_HeaderContainer","components_Navbar_Navbar","Route","path","render","components_Login_Login","Preloader","AppContainer","compose","withRouter","SamuraiAPP","BrowserRouter","es","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","value","maxLength","Textarea","_ref","input","meta","D_1react_react_way_of_samurai_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","showError","touched","react__WEBPACK_IMPORTED_MODULE_1___default","styles","assign","_ref2","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_assets_images_preloader_svg__WEBPACK_IMPORTED_MODULE_1__","_assets_images_preloader_svg__WEBPACK_IMPORTED_MODULE_1___default","backgroundColor","preloader","posts","likesCount","newPostText","profile","addPostActionCreator","addPostForm","setStatus","getUserProfile","newPost","users","totalUsersCount","isFetching","followingInProgress","portionSize","setCurrentPage","toggleIsFetching","toggleFollowingProgress","items","count","totalCount","followSuccess","unfollowSuccess","map","u","followed","filter"],"mappings":"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","file":"static/js/main.ea09c239.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__ZWqd0\",\"item\":\"Navbar_item__2e4zp\",\"activeLink\":\"Navbar_activeLink__2lSEt\"};","const UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\r\nconst SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ],\r\n   \r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n            return {\r\n                ...state,\r\n                newMessageBody: action.body\r\n            };\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE,newMessageBody})\r\nexport const updateNewMessageBodyCreator = (body) =>\r\n    ({type: UPDATE_NEW_MESSAGE_BODY, body: body})\r\n\r\nexport default dialogsReducer;","module.exports = __webpack_public_path__ + \"static/media/preloader.6e7c9db7.svg\";","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers:     {\r\n        \"API-KEY\": \"fb5d6b5f-bde7-47a3-adc3-49cb0067798e\"\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status });\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post('auth/login', {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login');\r\n    },\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1_fob\",\"error\":\"FormsControls_error__2kXtG\",\"formSummaryError\":\"FormsControls_formSummaryError__3v3VK\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n\r\n        <div className={s.loginBlock}>\r\n            { props.isAuth \r\n                ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>                  \r\n                : <NavLink to={'/login'}>Login</NavLink> }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import { stopSubmit } from \"redux-form\";\r\nimport {authAPI} from \"../api/api\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n         \r\n          return {\r\n                ...state,\r\n                ...action.payload\r\n               \r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}  })\r\nexport const getAuthUserData = () => (dispatch) => {\r\n    return authAPI.me()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                let {id, login, email} = response.data.data;\r\n                dispatch(setAuthUserData(id, email, login, true));\r\n            }\r\n        });\r\n    \r\n}\r\n\r\nexport const login = (email, password, rememberMe) => (dispatch) => {\r\n    \r\n   \r\n  \r\n    authAPI.login(email, password, rememberMe)\r\n        .then(response => {\r\n           \r\n            if (response.data.resultCode === 0) {\r\n                \r\n               dispatch(getAuthUserData());\r\n            } else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n                dispatch(stopSubmit(\"login\", {_error: message}));\r\n               \r\n            }\r\n        });\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    authAPI.logout()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n               dispatch(setAuthUserData(null, null, null, false));\r\n            }\r\n        });\r\n}\r\n\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../utils/validator/validator';\r\nimport { Input } from '../common/FormsControls/FormControls';\r\nimport {connect} from 'react-redux';\r\nimport {login} from '../../redux/auth-reducer'\r\nimport { Redirect } from 'react-router-dom';\r\nimport style from './../common/FormsControls/FormsControls.module.css'\r\n\r\nlet maxLength100 = maxLengthCreator(100);\r\n\r\n\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    \r\n    return <form onSubmit={props.handleSubmit}>\r\n    <div>\r\n        <Field placeholder={\"Email\"} name ={'email'}\r\n        component= {Input}   validate={[required, maxLength100]}/>\r\n    </div>\r\n    <div>\r\n        <Field placeholder={\"Password\"} name ={'password'} \r\n        component= {Input}   validate={[required, maxLength100]}/>\r\n    </div>\r\n    <div>\r\n        <Field type={\"checkbox\"} name ={'rememberMe'} component={'input'}/> remembe me\r\n    </div>\r\n    {props.error && <div className={style.formSummaryError}>\r\n        {props.error}\r\n    </div>}\r\n    <div>\r\n        <button>Login</button>\r\n    </div>\r\n\r\n    </form>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n        // console.log(formData);\r\n\r\n    }\r\n  \r\n    if(props.isAuth) {\r\n        return <Redirect to = {'/profile'} />\r\n    }\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);\r\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","\r\nimport { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n    \r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n               \r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\nexport const initializeApp = () => (dispatch) => {\r\n   let promise = dispatch(getAuthUserData());\r\n   promise.then(() => {\r\n    //    debugger\r\n        dispatch(initializedSuccess())\r\n        }\r\n       );\r\n\r\n}\r\n\r\n\r\n\r\nexport default authReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./app-reducer\"\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\n\r\nexport default store;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nexport const withSuspensia = (Component) => {\r\n\r\n    return (props) => {\r\n         return   <React.Suspense fallback = {<div>Loading ////</div>} >\r\n                    <Component {...props} /> \r\n                 </React.Suspense>\r\n    };\r\n}","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport './App.css';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\n\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport Navbar from './components/Navbar/Navbar';\r\n\r\n\r\nimport { initializeApp } from \"./redux/app-reducer\";\r\nimport store from \"./redux/redux-store\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {withSuspensia} from \"./hoc/withSuspensia\";\r\n\r\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\r\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\r\nconst UsersContainer = React.lazy(() => import(\"./components/Users/UsersContainer\"));\r\n\r\nclass App extends React.Component {\r\n       componentDidMount() {\r\n              this.props.initializeApp();\r\n            }\r\n    \r\n    render(){\r\n       if (!this.props.initialized) {\r\n              return <Preloader />\r\n       }\r\n       return (\r\n            <div className='app-wrapper'>\r\n              \r\n                <HeaderContainer />\r\n                <Navbar />\r\n                <div className='app-wrapper-content'>\r\n                    <Route path='/dialogs'\r\n                           render={ withSuspensia(DialogsContainer)} />\r\n\r\n                    <Route path='/profile/:userId?'\r\n                           render={ withSuspensia(ProfileContainer)} />\r\n              \r\n\r\n                    <Route path='/users'\r\n                           render={ withSuspensia(UsersContainer)} />\r\n               \r\n                      \r\n\r\n                    <Route path='/login'\r\n                           render={ () => <LoginPage /> }/>\r\n\r\n\r\n                </div>\r\n              \r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n              initialized: state.app.initialized\r\n})\r\nlet AppContainer = compose(     \r\n       withRouter,\r\n       connect(mapStateToProps, {initializeApp})\r\n       )(App);\r\n \r\nlet SamuraiAPP = (props) =>{\r\n   return  <BrowserRouter>\r\n       <Provider store={store}>\r\n           <AppContainer/>\r\n       </Provider>\r\n   </BrowserRouter>    \r\n}\r\n\r\nexport default SamuraiAPP;\r\n\r\n// export default connect(null, {getAuthUserData})(App);\r\n","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SamuraiAPP from './App';\r\n\r\n\r\nReactDOM.render(<SamuraiAPP/>, document.getElementById('root'));\r\n\r\n\r\n// API\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const required = value => {\r\n    if(value) return undefined;\r\n    return 'Field is requred';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import React from \"react\"\r\nimport styles from \"./FormsControls.module.css\"\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const showError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl +\" \"+ (showError ? styles.error :'')}>\r\n            <div>\r\n              <textarea {...input} {...props} />\r\n            </div>\r\n            {showError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const showError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl +\" \"+ (showError ? styles.error :'')}>\r\n            <div>\r\n              <input {...input} {...props} />\r\n            </div>\r\n            {showError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3Mgjc\",\"loginBlock\":\"Header_loginBlock__2jwiD\"};","import React from 'react';\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div  style={ { backgroundColor: 'white' } }>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    newPostText: 'it-kamasutra.com',\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.addPostForm,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n      \r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (addPostForm) => ({type: ADD_POST,addPostForm})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\n\r\nexport const getUserProfile = (userId) => (dispatch) => {\r\n    usersAPI.getProfile(userId).then(response => {\r\n        dispatch(setUserProfile(response.data));\r\n    });\r\n}\r\n\r\nexport const getStatus = (userId) => (dispatch) => {\r\n    profileAPI.getStatus(userId)\r\n        .then(response => {\r\n            dispatch(setStatus(response.data));\r\n        });\r\n}\r\n\r\nexport const updateStatus = (status) => (dispatch) => {\r\n    profileAPI.updateStatus(status)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(status));\r\n            }\r\n        });\r\n}\r\n\r\nexport const updateNewPostTextActionCreator = (text) =>\r\n    ({type: UPDATE_NEW_POST_TEXT, newText: text })\r\n\r\nexport default profileReducer;","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [ ],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n    portionSize: 15\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map( u =>  {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map( u =>  {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId })\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(currentPage));\r\n\r\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        });\r\n    }\r\n}\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode == 0) {\r\n                    dispatch(followSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId));\r\n            });\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode == 0) {\r\n                    dispatch(unfollowSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId));\r\n            });\r\n    }\r\n}\r\n\r\nexport default usersReducer;"],"sourceRoot":""}