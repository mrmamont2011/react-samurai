{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialogs","dialogsItems","active","messages","message","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","_React$Component","Object","D_1react_react_way_of_samurai_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_1react_react_way_of_samurai_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_1react_react_way_of_samurai_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","D_1react_react_way_of_samurai_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_1react_react_way_of_samurai_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","React","connect","DialogItem","path","id","react_default","className","s","dialog","NavLink","name","Message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogsPage","dialogsElements","map","d","Dialogs_DialogItem_DialogItem","messagesElements","m","Dialogs_Message_Message","values","sendMessage","newMessageBody","compose","dispatch","sendMessageCreator","updateNewMessageBody","body","updateNewMessageBodyCreator"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,aAAA,8BAAAC,OAAA,wBAAAC,SAAA,0BAAAC,QAAA,yKCGdC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAc,IAErCC,EAFqC,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,SAAAC,MAAA,WAInC,OAAKR,KAAKS,MAAMjB,OAETkB,EAAAC,EAAAC,cAACjB,EAAcK,KAAKS,OAFIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,eAJTlB,EAAA,CAEXmB,IAAMpB,WAUtC,OAFqCqB,YAAQ1B,EAAR0B,CAAoCpB,qGCN9DqB,EARI,SAACR,GAChB,IAAIS,EAAO,YAAcT,EAAMU,GAE/B,OAAOC,EAAAT,EAAAC,cAAA,OAAKS,UAAWC,IAAEC,OAAS,IAAMD,IAAEnC,QACtCiC,EAAAT,EAAAC,cAACY,EAAA,EAAD,CAASV,GAAII,GAAOT,EAAMgB,QCDnBC,EAJC,SAACjB,GACb,OAAOW,EAAAT,EAAAC,cAAA,OAAKS,UAAWC,IAAEC,QAASd,EAAMpB,4CCMxCsC,EAAcC,YAAiB,IAe7BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,CAbL,SAACrB,GACpB,OACIW,EAAAT,EAAAC,cAAA,QAAMoB,SAAUvB,EAAMwB,cACtBb,EAAAT,EAAAC,cAAA,WACIQ,EAAAT,EAAAC,cAACsB,EAAA,EAAD,CAAOC,UAAYC,IAAUX,KAAO,iBAAiBY,YAAY,qBACjEC,SAAU,CAACC,IAAUZ,MAGzBP,EAAAT,EAAAC,cAAA,WAAKQ,EAAAT,EAAAC,cAAA,0BAoCE4B,EA5BC,SAAC/B,GAEb,IAAIlB,EAAQkB,EAAMgC,YAEdC,EAAkBnD,EAAMN,QAAQ0D,IAAK,SAAAC,GAAC,OAAIxB,EAAAT,EAAAC,cAACiC,EAAD,CAAYpB,KAAMmB,EAAEnB,KAAMlB,IAAKqC,EAAEzB,GAAIA,GAAIyB,EAAEzB,OACrF2B,EAAmBvD,EAAMH,SAASuD,IAAK,SAAAI,GAAC,OAAI3B,EAAAT,EAAAC,cAACoC,EAAD,CAAS3D,QAAS0D,EAAE1D,QAASkB,IAAKwC,EAAE5B,OASpF,OACIC,EAAAT,EAAAC,cAAA,OAAKS,UAAWC,IAAErC,SACdmC,EAAAT,EAAAC,cAAA,OAAKS,UAAWC,IAAEpC,cACZwD,GAENtB,EAAAT,EAAAC,cAACiB,EAAD,CAAqBG,SAXT,SAACiB,GACjBxC,EAAMyC,YAAYD,EAAOE,mBAWrB/B,EAAAT,EAAAC,cAAA,OAAKS,UAAWC,IAAElC,UACdgC,EAAAT,EAAAC,cAAA,WAAOkC,8BCxBRM,sBACXpC,YAlBkB,SAACzB,GAEnB,MAAO,CACHkD,YAAalD,EAAMkD,cAGF,SAACY,GACtB,MAAO,CACHH,YAAa,SAACC,GACVE,EAASC,YAAmBH,KAEhCI,qBAAsB,SAACC,GACnBH,EAASI,YAA4BD,QAO7C9D,IAFW0D,CAGbZ","file":"static/js/5.7db3c3a5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3A2Sr\",\"dialogsItems\":\"Dialogs_dialogsItems__1w1UP\",\"active\":\"Dialogs_active__3MFNV\",\"messages\":\"Dialogs_messages__3kd0f\",\"message\":\"Dialogs_message__1MjWy\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {reduxForm, Field} from 'redux-form';\r\nimport {Textarea} from '../common/FormsControls/FormControls' \r\nimport { required, maxLengthCreator } from '../../utils/validator/validator';\r\n\r\n\r\nlet maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component= {Textarea} name = 'newMessageBody' placeholder='Enter your message'\r\n            validate={[required, maxLength50]}/>\r\n\r\n        </div>\r\n        <div><button>Send</button></div>\r\n    </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} />  );\r\n    let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id} /> );\r\n  \r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    //if (!props.isAuth) return <Redirect to={\"/login\"} /> ;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage} />\r\n            <div className={s.messages}>\r\n                <div>{ messagesElements }</div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    \r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        },\r\n        updateNewMessageBody: (body) => {\r\n            dispatch(updateNewMessageBodyCreator(body));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}